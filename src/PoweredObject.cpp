/*+===================================================================

   Class:    PowerObject

   Summary:  none

   Methods:  none

 ----------------------------------------------------------------------
   Copyright (C) 2014, Stephen Wunschel
 ===================================================================+*/

// standard header files

// project header files
#include "PoweredObject.h"

//3rd party files
using namespace Eigen;
#include <Eigen/Geometry>

/*************************************************************************************************************************************
 * constructor
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   SDW   initial coding
 *************************************************************************************************************************************/
PoweredObject::PoweredObject()
{
}

/*************************************************************************************************************************************
 * destructor
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   SDW   initial coding
 *************************************************************************************************************************************/
PoweredObject::~PoweredObject()
{
}

/*************************************************************************************************************************************
 * applyThrust
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   BSW   initial coding
 *************************************************************************************************************************************/
void applyThrust(float givenThrust) {
	if(givenThrust < thrust) {
		applyForce(Vector3D temp = {givenThrust, 0.0, 0.0};
		return void;
	}
	applyForce(Vector3D temp = {thrust, 0.0, 0.0};	
}
void applyThrust() {
	applyForce(Vector3D temp = {thrust, 0.0, 0.0};
}

/*************************************************************************************************************************************
 * getThrust
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 100   05/06/2014   BSW   initial coding
 *************************************************************************************************************************************/
float PoweredObject::getThrust(void)
{
	return objectThrust;
}

/*************************************************************************************************************************************
 * setThrust
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 100   05/06/2014   BSW   initial coding
 *************************************************************************************************************************************/
void PoweredObject::setThrust(float magnitude)
{
	objectThrust = magnitude;
}
