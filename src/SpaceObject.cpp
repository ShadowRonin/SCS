/*+===================================================================

   Class:    SpaceObject

   Summary:  none

   Methods:  none

 ----------------------------------------------------------------------
   Copyright (C) 2014, Stephen Wunschel
 ===================================================================+*/

// standard header files

// project header files
//#include "common.h"
#include "SpaceObject.h"

//3rd party librarys
#include <Geometry>
using namespace Eigen;

/*************************************************************************************************************************************
 * constructor
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   SDW   initial coding
 *************************************************************************************************************************************/
SpaceObject::SpaceObject()
{
	//ctor
}

/*************************************************************************************************************************************
 * destructor
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   SDW   initial coding
 *************************************************************************************************************************************/
SpaceObject::~SpaceObject()
{
	//dtor
}

/*************************************************************************************************************************************
 * getPosition	- return objectPosition in global FoR
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 100   05/09/2014   SDW   initial coding
 *************************************************************************************************************************************/
cords3D SpaceObject::getPosition()
{
	return objectPosition;
}

/*************************************************************************************************************************************
 * setPosition	- set objectPosition to provided coordinates
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 100   05/09/2014   SDW   initial coding
 *************************************************************************************************************************************/
void SpaceObject::setPosition(float _x, float _y, float _z)
{
	objectPosition(x_cord) = _x;
	objectPosition(y_cord) = _y;
	objectPosition(z_cord) = _z;
}

/*************************************************************************************************************************************
 * applyForce
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   BSW   initial coding
 *************************************************************************************************************************************/
void SpaceObject::applyForce(vector3D)
{
//	objectVelocity = objectVelocity + (vector3D / objectMass);
}

/*************************************************************************************************************************************
 * rotate
 *
 * VRM      Date      By    Description
 * ===   ==========   ===   ==========================================================================================================
 * 1xx   xx/xx/2014   BSW   initial coding
 *************************************************************************************************************************************/
void SpaceObject::rotate(float yaw, float pitch, float roll)
{
	//objectRotation = objectRotation * toQuat(yaw, pitch, roll);
}
